extend type Mutation @namespace(field: "Api\\Users\\GraphQL\\Resolvers") {
    login(
        username: String!
        password: String!
        withRoles: [String!]!
    ): LoginResult
        @field(resolver: "LoginResolver@login")

    logout: Boolean
        @guard(with: ["api"])
        @field(resolver: "LoginResolver@logout")

    refreshToken (
        refresh_token: String
    ): AuthToken
        @field(resolver: "LoginResolver@refresh")

    requestPasswordReset (
        email: String!
        url: String
    ): Boolean
        @field(resolver: "PasswordResetResolver@requestPasswordReset")

    resetPassword(
        password: String!
        token: String!
    ): Result
        @field(resolver: "PasswordResetResolver@resetPassword")

    signup(
        username: String!
        password: String!
        withRoles: [String!]!
        profile: ProfileInput!
    ): LoginResult
        @field(resolver: "LoginResolver@signup")

    updatePassword(
        current_password: String!
        new_password: String!
        confirm_password: String!
    ): UpdatePasswordResult
        @field(resolver: "UserResolver@updatePassword")
}

type AuthToken {
    expires_in: Int!
    access_token: String!
    refresh_token: String!
}

type LoginResult {
    auth_tokens: AuthToken
    user: User
}

type UpdatePasswordResult {
    success: Boolean!
    message: String!
}
